rewrite

Usage
----

collustro.register(some_object)  # or register(some_object, view)
collustro.show()  # or show(async=True)


How it works
----

Start up a server in a seperate process.
Wrap each object in a way that I can watch for changes.
On change, send the difference (or copy of new object) to the server.
The server uses the views to show different objects.

Server is a flask application running in a separate process using
multiprocessing and receiving updates via post requests.

Verbose example
----

# make object
l = [1, 2, 3, 4]

# make server
s = server()

# wrap object
l = wrap_list(l)  # returns a wrapped_list which does something on change

l.on_change = lambda self: s.send_to_server(l)

l.append(5)  # should trigger on_change, sending new value to server
